@model IEnumerable<IGrouping<Department, SalesRecord>>

@{
    ViewData["Title"] = "Grouping Search";
    DateTime minDate = DateTime.Parse(ViewData["minDate"] as string);
    DateTime maxDate = DateTime.Parse(ViewData["maxDate"] as string);

    Dictionary<string, string> dictionary = new Dictionary<string, string>();

    dictionary["Billed"] = ProjetoSalesWebMvc.Models.Enums.SaleStatus.Billed.ToString();
    dictionary["Pending"] = ProjetoSalesWebMvc.Models.Enums.SaleStatus.Pending.ToString();
    dictionary["Canceled"] = ProjetoSalesWebMvc.Models.Enums.SaleStatus.Canceled.ToString();
}

<h2>@ViewData["Title"]</h2>

<nav class="navbar navbar-inverse">
    <div class="container-fluid">
        <form class="navbar-form navbar-left" role="search">
            <div class="form-group">
                <div class="form-group">
                    <label for="minDate">Min Date</label>
                    <input type="date" class="form-control" name="minDate" value=@ViewData["minDate"] />
                </div>
                <div class="form-group">
                    <label for="maxDate">Max Date</label>
                    <input type="date" class="form-control" name="maxDate" value=@ViewData["maxDate"] />
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    </div>
</nav>

@foreach (var departmentGroup in Model)
{
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">
                Department @departmentGroup.Key.Name:
                @departmentGroup.Key.TotalSales(minDate, maxDate).ToString("C")
            </h3>
            <h5>Total rows: @departmentGroup.Count()</h5>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-hover">
                <thead>
                    <tr class="success">
                        <th>
                            Date
                        </th>
                        <th>
                            Amount
                        </th>
                        <th>
                            Seller
                        </th>
                        <th>
                            Status
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in departmentGroup)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Seller.Name)
                            </td>
                            <td class="@(item.Status.ToString() ==  dictionary["Billed"] ? "text-success" :
                                        item.Status.ToString() == dictionary["Pending"] ? "text-info" : "text-danger")">
                                <strong>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </strong>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<a asp-action="Index">Back to List</a>